# This workflow will build and deploy a MuleSoft project to CloudHub

name: build-and-deploy-mulesoft-project

on:
  pull_request:
    types:
    - closed
    branches:
    - 'development'
 
jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    #Step 1
    - name: Checkout repository
      uses: actions/checkout@v2
    # Step 2
    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    # Step 3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    # Step 4    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    # Step 5
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    #Step 6
    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar
        
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:    
    #Step 1
    - name: Checkout repository
      uses: actions/checkout@v2
    # Step 2
    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    # Step 3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: "zulu"
        java-version: 8
    # Step 4
    - name: Publish to Exchange
      run: |
        mvn deploy --settings .maven/settings.xml -DskipMunitTests \
        -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
        -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"
    - name: Deploy to CloudHub 2.0
      run: |
        mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
        -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
        -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}" 
